{"version":3,"sources":["Components/Header/Header.js","Components/App/App.js","Utils/reportWebVitals.js","index.js"],"names":["Header","Navbar","bg","variant","Container","NavbarBrand","href","Nav","className","NavItem","NavLink","target","Home","lazy","About","Contact","App","basename","process","fallback","exact","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","render","document","getElementById"],"mappings":"4PAiDeA,EAtCE,WACb,OACE,mCACE,cAACC,EAAA,EAAD,CACEC,GAAG,OACHC,QAAQ,OAFV,SAIE,eAACC,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAaC,KAAK,IAAlB,yBACE,eAACC,EAAA,EAAD,CAAKC,UAAU,UAAf,UACE,eAACC,EAAA,EAAD,eACE,cAACC,EAAA,EAAD,CAASJ,KAAK,QAAd,SACE,sBAAME,UAAU,uBAAhB,2BAGJ,eAACC,EAAA,EAAD,eACE,cAACC,EAAA,EAAD,CAASJ,KAAK,UAAd,SACE,sBAAME,UAAU,uBAAhB,6BAIN,eAACD,EAAA,EAAD,WACE,eAACE,EAAA,EAAD,eACE,cAACC,EAAA,EAAD,CAASJ,KAAK,kCAAkCK,OAAO,SAAvD,uBAKF,eAACF,EAAA,EAAD,eACE,cAACC,EAAA,EAAD,CAASJ,KAAK,sCAAsCK,OAAO,SAA3D,oCCnCZC,EAAOC,gBAAK,kBAAM,gCAClBC,EAAQD,gBAAK,kBAAM,gCACnBE,EAAUF,gBAAK,kBAAM,gCAmBZG,EAjBH,WACR,OACE,qCACE,cAAC,EAAD,IACA,cAAC,IAAD,CAAQC,SAAUC,GAAlB,SACE,cAAC,WAAD,CAAUC,SAAU,6CAApB,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAWV,IACjC,cAAC,IAAD,CAAOS,KAAK,SAASC,UAAWR,IAChC,cAAC,IAAD,CAAOO,KAAK,WAAWC,UAAWP,eCNjCQ,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCCdQ,iBACE,mCACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAG1BX,M","file":"static/js/main.2714291d.chunk.js","sourcesContent":["import React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n  Nav,\n  NavLink,\n  NavItem,\n  Navbar,\n  NavbarBrand,\n  Container,\n} from 'react-bootstrap';\n\n  const Header = () => {\n    return (\n      <>\n        <Navbar\n          bg='dark'\n          variant='dark'\n        >\n          <Container>\n            <NavbarBrand href='/'>Dylan Lomax</NavbarBrand>\n              <Nav className='me-auto'>\n                <NavItem> {/* ABOUT ME */}\n                  <NavLink href='about'>\n                    <span className='nav-link-inner--text'>About Me</span>\n                  </NavLink>\n                </NavItem>\n                <NavItem> {/* CONTACT */}\n                  <NavLink href='contact'> \n                    <span className='nav-link-inner--text'>Contact</span>\n                  </NavLink>\n                </NavItem>\n              </Nav>\n              <Nav>\n                <NavItem> {/* GITHUB */}\n                  <NavLink href='https://www.github.com/dlomax64' target='_blank'>\n                    {/*<FontAwesomeIcon icon={[\"fab\", \"github\"]}/>*/}\n                    GitHub\n                  </NavLink>\n                </NavItem>\n                <NavItem> {/* LINKEDIN */}\n                  <NavLink href='https://www.linkedin.com/in/dlomax/' target='_blank'>LinkedIn</NavLink>\n                </NavItem>\n              </Nav>\n          </Container>\n        </Navbar>\n      </>\n    )\n  }\n\nexport default Header;\n","import React, { Suspense, lazy } from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\n\nimport Header from '../Header/Header';\n\nconst Home = lazy(() => import('../Home/Home'));\nconst About = lazy(() => import('../About/About'));\nconst Contact = lazy(() => import('../Contact/Contact'));\n\nconst App = () => {\n    return (\n      <>\n        <Header />\n        <Router basename={process.env.PUBLIC_URL}>\n          <Suspense fallback={<div>Loading...</div>}>\n            <Switch>\n              <Route exact path='/' component={Home}/>\n              <Route path='/about' component={About}/>\n              <Route path='/contact' component={Contact}/>\n            </Switch>\n          </Suspense>\n        </Router>\n      </>\n    )\n  }\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport { render } from 'react-dom';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport '../node_modules/react-bootstrap/dist/react-bootstrap.min.js';\nimport './Styles/index.css';\nimport App from './Components/App/App';\nimport reportWebVitals from './Utils/reportWebVitals';\n\nrender(\n  <>\n    <App />\n  </>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}